{"version":3,"sources":["components/UI/Layout/Layout.module.css","components/UI/Layout/Footer/Footer.module.css","components/UI/PageHeader/PageHeader.module.css","services/data/tax-rebates.ts","components/UI/Layout/Header/Header.tsx","components/UI/Layout/Footer/Footer.tsx","components/UI/Layout/Layout.tsx","components/UI/PageHeader/PageHeader.tsx","services/data/medical-tax-credit.ts","services/data/tax-brackets.ts","services/data/tax-thresholds.ts","services/TaxCalculatorService.ts","components/TaxCalculator/DetailForm/DetailForm.tsx","components/TaxCalculator/TaxSummary/AmountDescriptions/AmountDescriptions.tsx","components/TaxCalculator/TaxSummary/TaxSummary.tsx","components/TaxCalculator/TaxCalculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","TaxRebateType","AntHeader","Layout","Header","Title","Typography","style","display","alignItems","justifyContent","level","color","marginBottom","href","AntFooter","Footer","className","classes","footer","target","rel","Content","AntLayout","children","layout","content","PageHeader","title","pageHeader","medicalTaxCreditRates","taxBrackets","lowerLimit","upperLimit","rate","additionalAmount","Infinity","taxRebates","Primary","type","amount","Secondary","Tertiary","taxThresholds","TaxCalculatorService","calculateTaxDto","monthlySalary","medicalAidDependents","dateOfBirth","age","this","calculateAge","console","log","annualSalary","isAboveTaxThreshold","initialTax","calculateInitialTax","calculateTaxRebates","medicalTaxCredit","calculateMedicalAidTaxCredit","totalTaxLiability","total","monthlyPaye","monthlyNettSalary","moment","diff","rebates","rebateTotal","applicableRebate","push","dependents","taxBracket","findTaxBracket","applicableTaxBracket","find","Error","Text","initialFormValues","Date","name","hasMedicalAid","DetailForm","onTaxCalculated","useState","setHasMedicalAid","Form","useForm","form","initMedicalAidDependents","currentFormValues","getFieldsValue","setFieldsValue","resetMedicalAidDependents","margin","initialValues","onFinish","values","dto","numeral","value","taxResponse","calculateTax","onFinishFailed","errorInfo","message","error","Item","label","rules","required","validator","_","numeralValue","Promise","resolve","reject","extra","onBlur","formattedMonthlySalary","format","valuePropName","onChange","min","step","precision","htmlType","onClick","resetFields","AmountDescriptions","descriptionLines","lineData","map","line","contentStyle","textAlign","fontWeight","bold","bordered","column","TaxSummary","taxSummary","payDescriptionLineData","receiveDescriptionLineData","direction","size","width","subTitle","TaxCalculator","setTaxSummary","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4be586a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__E-uks\",\"content\":\"Layout_content__3i-cj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2jIF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"PageHeader_pageHeader__3cOwV\"};","export enum TaxRebateType {\n  Primary = \"Primary\",\n  Secondary = \"Secondary\",\n  Tertiary = \"Tertiary\",\n}\n\nexport interface TaxRebateResponse {\n  rebates: TaxRebate[];\n  total: number;\n}\n\nexport interface TaxRebate {\n  type: TaxRebateType;\n  amount: number;\n}\n\ninterface TaxRebates {\n  [TaxRebateType.Primary]: TaxRebate;\n  [TaxRebateType.Secondary]: TaxRebate;\n  [TaxRebateType.Tertiary]: TaxRebate;\n}\n\nexport const taxRebates: TaxRebates = {\n  [TaxRebateType.Primary]: { type: TaxRebateType.Primary, amount: 15714 },\n  [TaxRebateType.Secondary]: { type: TaxRebateType.Secondary, amount: 15714 },\n  [TaxRebateType.Tertiary]: { type: TaxRebateType.Tertiary, amount: 15714 },\n};\n","import { FC } from \"react\";\nimport { Layout, Typography, Button } from \"antd\";\n\nconst { Header: AntHeader } = Layout;\nconst { Title } = Typography;\n\nconst Header: FC = () => {\n  return (\n    <AntHeader\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Title level={4} style={{ color: \"#fff\", marginBottom: 0 }}>\n        Tax Calculator\n      </Title>\n      <Button href=\"https://github.com/itsthatotherguy.com/tax-calculator\">\n        View Repository\n      </Button>\n    </AntHeader>\n  );\n};\n\nexport default Header;\n","import { FC } from \"react\";\nimport { Layout } from \"antd\";\nimport classes from \"./Footer.module.css\";\n\nconst { Footer: AntFooter } = Layout;\n\nconst Footer: FC = () => {\n  return (\n    <AntFooter className={classes.footer}>\n      Developed by{\" \"}\n      <a\n        href=\"https://github.com/itsthatotherguy\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Christiaan van der Merwe\n      </a>\n    </AntFooter>\n  );\n};\n\nexport default Footer;\n","import { FC } from \"react\";\nimport { Layout as AntLayout } from \"antd\";\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer/Footer\";\n\nimport classes from \"./Layout.module.css\";\n\nconst { Content } = AntLayout;\n\nconst Layout: FC = ({ children }) => {\n  return (\n    <AntLayout className={classes.layout}>\n      <Header />\n      <Content className={classes.content}>{children}</Content>\n      <Footer>Footer</Footer>\n    </AntLayout>\n  );\n};\n\nexport default Layout;\n","import { FC } from \"react\";\n\nimport { PageHeader as AntPageHeader } from \"antd\";\n\nimport classes from \"./PageHeader.module.css\";\n\ninterface Props {\n  title: string;\n}\n\nconst PageHeader: FC<Props> = ({ title }) => {\n  return <AntPageHeader title={title} className={classes.pageHeader} />;\n};\n\nexport default PageHeader;\n","interface MedicalTaxCreditRates {\n  oneDependent: number;\n  twoDependents: number;\n  perDependentAboveTwo: number;\n}\n\nexport const medicalTaxCreditRates: MedicalTaxCreditRates = {\n  oneDependent: 332,\n  twoDependents: 664,\n  perDependentAboveTwo: 224,\n};\n","export interface TaxBracket {\n  lowerLimit: number;\n  upperLimit: number;\n  rate: number;\n  additionalAmount: number;\n}\n\nexport const taxBrackets: TaxBracket[] = [\n  {\n    lowerLimit: 1,\n    upperLimit: 216200,\n    rate: 0.18,\n    additionalAmount: 0,\n  },\n  {\n    lowerLimit: 216201,\n    upperLimit: 337800,\n    rate: 0.26,\n    additionalAmount: 38916,\n  },\n  {\n    lowerLimit: 337801,\n    upperLimit: 467500,\n    rate: 0.31,\n    additionalAmount: 70532,\n  },\n  {\n    lowerLimit: 467501,\n    upperLimit: 613600,\n    rate: 0.36,\n    additionalAmount: 110739,\n  },\n  {\n    lowerLimit: 613601,\n    upperLimit: 782200,\n    rate: 0.39,\n    additionalAmount: 163335,\n  },\n  {\n    lowerLimit: 782200,\n    upperLimit: 1656600,\n    rate: 0.41,\n    additionalAmount: 229089,\n  },\n  {\n    lowerLimit: 782201,\n    upperLimit: Infinity,\n    rate: 0.45,\n    additionalAmount: 587593,\n  },\n];\n","interface TaxThresholds {\n  primary: number;\n  secondary: number;\n  tertiary: number;\n}\n\nexport const taxThresholds: TaxThresholds = {\n  primary: 87300,\n  secondary: 135150,\n  tertiary: 151100,\n};\n","import moment, { Moment } from \"moment\";\nimport { medicalTaxCreditRates } from \"./data/medical-tax-credit\";\nimport { TaxBracket, taxBrackets } from \"./data/tax-brackets\";\nimport {\n  TaxRebate,\n  TaxRebateResponse,\n  taxRebates,\n  TaxRebateType,\n} from \"./data/tax-rebates\";\nimport { taxThresholds } from \"./data/tax-thresholds\";\n\nexport interface CalculateTaxDto {\n  dateOfBirth: Moment;\n  monthlySalary: number;\n  medicalAidDependents: number;\n}\n\nexport interface TaxCalculatorResponse {\n  isAboveTaxThreshold: boolean;\n  annualSalary?: number;\n  monthlySalary?: number;\n  initialTax?: number;\n  taxRebates?: TaxRebateResponse;\n  medicalTaxCredit?: number;\n  totalTaxLiability?: number;\n  monthlyPaye?: number;\n  monthlyNettSalary?: number;\n}\n\nclass TaxCalculatorService {\n  static calculateTax(calculateTaxDto: CalculateTaxDto): TaxCalculatorResponse {\n    const { monthlySalary, medicalAidDependents, dateOfBirth } =\n      calculateTaxDto;\n\n    const age = this.calculateAge(dateOfBirth);\n    console.log(age);\n    const annualSalary = monthlySalary * 12;\n\n    const isAboveTaxThreshold = this.isAboveTaxThreshold(annualSalary, age);\n\n    if (!isAboveTaxThreshold) {\n      return {\n        isAboveTaxThreshold,\n      };\n    }\n\n    const initialTax = this.calculateInitialTax(annualSalary);\n\n    const taxRebates = this.calculateTaxRebates(age);\n\n    const medicalTaxCredit =\n      this.calculateMedicalAidTaxCredit(medicalAidDependents);\n\n    let totalTaxLiability = initialTax - taxRebates.total - medicalTaxCredit;\n\n    let monthlyPaye = totalTaxLiability / 12;\n\n    let monthlyNettSalary = monthlySalary - monthlyPaye;\n\n    if (totalTaxLiability < 0) {\n      totalTaxLiability = 0;\n      monthlyPaye = 0;\n      monthlyNettSalary = 0;\n    }\n\n    return {\n      isAboveTaxThreshold,\n      annualSalary,\n      monthlySalary,\n      initialTax,\n      taxRebates,\n      medicalTaxCredit,\n      totalTaxLiability,\n      monthlyPaye,\n      monthlyNettSalary,\n    };\n  }\n\n  private static calculateAge(dateOfBirth: Moment): number {\n    return moment().diff(dateOfBirth, \"years\");\n  }\n\n  private static isAboveTaxThreshold(\n    annualSalary: number,\n    age: number\n  ): boolean {\n    if (age <= 65) {\n      return annualSalary > taxThresholds.primary;\n    } else if (age <= 75) {\n      return annualSalary > taxThresholds.secondary;\n    } else {\n      return annualSalary > taxThresholds.primary;\n    }\n  }\n\n  private static calculateTaxRebates(age: number): TaxRebateResponse {\n    const rebates: TaxRebate[] = [];\n    let rebateTotal = 0.0;\n\n    let applicableRebate = taxRebates[TaxRebateType.Primary];\n\n    rebateTotal += applicableRebate.amount;\n    rebates.push(applicableRebate);\n\n    if (age > 65) {\n      applicableRebate = taxRebates[TaxRebateType.Secondary];\n\n      rebateTotal += applicableRebate.amount;\n      rebates.push(applicableRebate);\n    }\n\n    if (age > 75) {\n      applicableRebate = taxRebates[TaxRebateType.Tertiary];\n\n      rebateTotal += applicableRebate.amount;\n      rebates.push(applicableRebate);\n    }\n\n    return {\n      rebates,\n      total: rebateTotal,\n    };\n  }\n\n  private static calculateMedicalAidTaxCredit(dependents: number): number {\n    if (dependents < 1) {\n      return 0;\n    }\n\n    let medicalTaxCredit = medicalTaxCreditRates.oneDependent;\n\n    if (dependents < 3) {\n      medicalTaxCredit = medicalTaxCreditRates.twoDependents;\n    } else {\n      const remainingDependents = dependents - 2;\n\n      medicalTaxCredit +=\n        medicalTaxCreditRates.perDependentAboveTwo * remainingDependents;\n    }\n\n    return medicalTaxCredit;\n  }\n\n  private static calculateInitialTax(annualSalary: number): number {\n    const taxBracket = this.findTaxBracket(annualSalary);\n\n    const tax =\n      (taxBracket.lowerLimit - 1 - annualSalary) * taxBracket.rate +\n      taxBracket.additionalAmount;\n\n    return tax;\n  }\n\n  private static findTaxBracket(annualSalary: number): TaxBracket {\n    const applicableTaxBracket = taxBrackets.find(\n      (taxBracket) =>\n        annualSalary >= taxBracket.lowerLimit &&\n        annualSalary <= taxBracket.upperLimit\n    );\n\n    if (!applicableTaxBracket) {\n      throw new Error(\"Tax bracket not found.\");\n    }\n\n    return applicableTaxBracket;\n  }\n}\n\nexport default TaxCalculatorService;\n","import { FC, useState } from \"react\";\n\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  InputNumber,\n  Space,\n  message,\n  DatePicker,\n  Typography,\n  Divider,\n} from \"antd\";\n\nimport PageHeader from \"../../UI/PageHeader/PageHeader\";\n\nimport TaxCalculatorService, {\n  CalculateTaxDto,\n} from \"../../../services/TaxCalculatorService\";\nimport { TaxSummaryInfo } from \"../TaxCalculator\";\n\nimport numeral from \"numeral\";\nimport moment, { Moment } from \"moment\";\n\nconst { Text } = Typography;\n\ninterface FormValues {\n  name: string;\n  dateOfBirth: Moment;\n  monthlySalary: string;\n  hasMedicalAid: boolean;\n  medicalAidDependents: number;\n}\n\ninterface Props {\n  onTaxCalculated: (taxSummaryInfo: TaxSummaryInfo | null) => void;\n}\n\nconst initialFormValues: FormValues = {\n  dateOfBirth: moment(new Date()),\n  name: \"\",\n  monthlySalary: \"0.00\",\n  hasMedicalAid: false,\n  medicalAidDependents: 0,\n};\n\nconst DetailForm: FC<Props> = ({ onTaxCalculated }) => {\n  const [hasMedicalAid, setHasMedicalAid] = useState(\n    initialFormValues.hasMedicalAid\n  );\n  const [form] = Form.useForm();\n\n  const handleHasMedicalAidToggle = () => {\n    if (hasMedicalAid) {\n      resetMedicalAidDependents();\n    } else {\n      initMedicalAidDependents();\n    }\n\n    setHasMedicalAid(!hasMedicalAid);\n  };\n\n  const initMedicalAidDependents = () => {\n    const currentFormValues: FormValues = form.getFieldsValue();\n    form.setFieldsValue({\n      ...currentFormValues,\n      medicalAidDependents: 1,\n    });\n  };\n\n  const resetMedicalAidDependents = () => {\n    const currentFormValues: FormValues = form.getFieldsValue();\n    form.setFieldsValue({\n      ...currentFormValues,\n      medicalAidDependents: 0,\n    });\n  };\n\n  const formatSalary = (): void => {\n    const currentFormValues: FormValues = form.getFieldsValue();\n    const formattedMonthlySalary = numeral(\n      currentFormValues.monthlySalary\n    ).format(\"0,0.00\");\n\n    form.setFieldsValue({\n      ...currentFormValues,\n      monthlySalary: formattedMonthlySalary,\n    });\n  };\n\n  const handleFinish = (values: FormValues) => {\n    const {\n      dateOfBirth,\n      hasMedicalAid,\n      medicalAidDependents,\n      monthlySalary,\n      name,\n    } = values;\n\n    const dto: CalculateTaxDto = {\n      dateOfBirth,\n      monthlySalary: numeral(monthlySalary).value() as number,\n      medicalAidDependents: hasMedicalAid ? medicalAidDependents : 0,\n    };\n\n    const taxResponse = TaxCalculatorService.calculateTax(dto);\n\n    onTaxCalculated({\n      ...taxResponse,\n      name,\n    });\n  };\n\n  const handleFinishFailed = (errorInfo: any) => {\n    message.error(\n      \"The form contains invalid input. Please correct these and try again.\"\n    );\n  };\n\n  const handleReset = () => {\n    form.resetFields();\n    setHasMedicalAid(false);\n    onTaxCalculated(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Your details\" />\n\n      <Text style={{ margin: 0 }}>\n        Please complete this form and click the button below to calculate your\n        tax.\n      </Text>\n\n      <Divider />\n\n      <Form\n        layout=\"vertical\"\n        form={form}\n        initialValues={initialFormValues}\n        onFinish={handleFinish}\n        onFinishFailed={handleFinishFailed}\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Please enter your name.\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Date of Birth\"\n          name=\"dateOfBirth\"\n          rules={[\n            {\n              required: true,\n              message: \"Please enter your date of birth.\",\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Monthly Salary\"\n          name=\"monthlySalary\"\n          rules={[\n            { required: true },\n            () => ({\n              validator(_, value) {\n                const numeralValue = numeral(value).value();\n\n                if (numeralValue && numeralValue > 0) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  new Error(\"The amount cannot be less or equal to 0.00\")\n                );\n              },\n            }),\n          ]}\n          extra=\"This is your salary before tax and UIF is deducted.\"\n        >\n          <Input onBlur={formatSalary} />\n        </Form.Item>\n\n        <Form.Item name=\"hasMedicalAid\" valuePropName=\"checked\">\n          <Checkbox onChange={handleHasMedicalAidToggle}>\n            Do you have medical aid?\n          </Checkbox>\n        </Form.Item>\n\n        {hasMedicalAid && (\n          <Form.Item\n            label=\"Medical Aid Dependents\"\n            name=\"medicalAidDependents\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Please enter number of dependents on your medical aid.\",\n              },\n            ]}\n            extra=\"Please enter the amount of dependents that you have on your medical aid, including yourself.\"\n          >\n            <InputNumber min={1} step={1} precision={0} />\n          </Form.Item>\n        )}\n\n        <Form.Item>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Calculate\n            </Button>\n            <Button htmlType=\"button\" onClick={handleReset}>\n              Reset\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default DetailForm;\n","import { FC } from \"react\";\n\nimport { Descriptions } from \"antd\";\n\nimport numeral from \"numeral\";\n\ninterface Props {\n  title: string;\n  lineData: DescriptionLine[];\n}\n\nexport interface DescriptionLine {\n  label: string;\n  amount?: number;\n  bold?: boolean;\n}\n\nconst AmountDescriptions: FC<Props> = ({ title, lineData }) => {\n  const descriptionLines: JSX.Element[] = lineData.map((line) => (\n    <Descriptions.Item\n      label={line.label}\n      contentStyle={{\n        textAlign: \"end\",\n        fontWeight: line.bold ? \"bold\" : \"normal\",\n      }}\n    >\n      {numeral(line.amount).format(\"0,0.00\")}\n    </Descriptions.Item>\n  ));\n\n  return (\n    <Descriptions title={title} bordered column={1}>\n      {descriptionLines}\n    </Descriptions>\n  );\n};\n\nexport default AmountDescriptions;\n","import { FC } from \"react\";\n\nimport { Result, Space } from \"antd\";\n\nimport PageHeader from \"../../UI/PageHeader/PageHeader\";\n\nimport { TaxSummaryInfo } from \"../TaxCalculator\";\n\nimport AmountDescriptions, {\n  DescriptionLine,\n} from \"./AmountDescriptions/AmountDescriptions\";\n\ninterface Props {\n  taxSummary: TaxSummaryInfo | null;\n}\n\nconst TaxSummary: FC<Props> = ({ taxSummary }) => {\n  const payDescriptionLineData: DescriptionLine[] = [\n    { label: \"Annual salary\", amount: taxSummary?.annualSalary },\n    { label: \"Tax before deductions\", amount: taxSummary?.initialTax },\n    { label: \"Tax rebate\", amount: taxSummary?.taxRebates?.total },\n    { label: \"Medical tax credit\", amount: taxSummary?.medicalTaxCredit },\n    {\n      label: \"Total tax payable\",\n      amount: taxSummary?.totalTaxLiability,\n      bold: true,\n    },\n  ];\n\n  const receiveDescriptionLineData: DescriptionLine[] = [\n    { label: \"Monthly salary\", amount: taxSummary?.monthlySalary },\n    { label: \"Monthly PAYE\", amount: taxSummary?.monthlyPaye },\n    {\n      label: \"Monthly nett salary\",\n      amount: taxSummary?.monthlyNettSalary,\n      bold: true,\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader title=\"Your Tax Summary\" />\n      {taxSummary?.isAboveTaxThreshold ? (\n        <>\n          <Space direction=\"vertical\" size=\"large\" style={{ width: \"100%\" }}>\n            <AmountDescriptions\n              title=\"Here's what you'll pay\"\n              lineData={payDescriptionLineData}\n            />\n            <AmountDescriptions\n              title=\"Here's what you'll receive\"\n              lineData={receiveDescriptionLineData}\n            />\n          </Space>\n        </>\n      ) : (\n        <Result subTitle=\"You are under the tax threshold for your age and thus you aren't liable for any tax.\" />\n      )}\n    </>\n  );\n};\n\nexport default TaxSummary;\n","import { Divider } from \"antd\";\nimport { FC, useState } from \"react\";\nimport { TaxCalculatorResponse } from \"../../services/TaxCalculatorService\";\nimport DetailForm from \"./DetailForm/DetailForm\";\nimport TaxSummary from \"./TaxSummary/TaxSummary\";\n\nexport interface TaxSummaryInfo extends TaxCalculatorResponse {\n  name: string;\n}\n\nconst TaxCalculator: FC = () => {\n  const [taxSummary, setTaxSummary] = useState<TaxSummaryInfo | null>(null);\n\n  return (\n    <>\n      <DetailForm onTaxCalculated={setTaxSummary} />\n      {taxSummary && (\n        <>\n          <Divider />\n          <TaxSummary taxSummary={taxSummary} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TaxCalculator;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\n\nimport Layout from \"./components/UI/Layout/Layout\";\nimport TaxCalculator from \"./components/TaxCalculator/TaxCalculator\";\n\nfunction App() {\n  return (\n    <Layout>\n      <TaxCalculator />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}